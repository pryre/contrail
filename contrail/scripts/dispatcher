#!/usr/bin/env python2

import sys
from math import *

import roslib
roslib.load_manifest('contrail')
import rospy
import actionlib

import contrail.waypoint_helper as wph
from contrail.msg import TrajectoryAction, TrajectoryGoal

global timer
global client_base

def dispatch_discrete(wps,nom_lvel,nom_rvel):
	for i in range(len(wps) - 1):

		dx = wps[i+1].position.x - wps[i].position.x
		dy = wps[i+1].position.y - wps[i].position.y
		dz = wps[i+1].position.z - wps[i].position.z

		lt = sqrt((dx*dx)+(dy*dy)+(dz*dz)) / nom_lvel
		rt = (wps[i+1].yaw - wps[i].yaw ) / nom_rvel

		dispatch_continuous([wps[i], wps[i+1]], max([lt,rt]))

def dispatch_continuous(wps,duration):
		goal_base = TrajectoryGoal()

		goal_base.start = rospy.Time.now() + rospy.Duration.from_sec(1)
		goal_base.duration = rospy.Duration.from_sec(duration)

		for i in range(len(wps)):
			goal_base.positions.append(wps[i].position)
			goal_base.yaws.append(wps[i].yaw)

		client_base.send_goal(goal_base)
		client_base.wait_for_result()

def timer_callback(e):
	global timer

	if e.current_real > rospy.Time(0):
		timer.shutdown()
		success, wps = wph.load_waypoints()

		if success and (len(wps) >= 2):
			tracking_mode = str(rospy.get_param("~waypoints/mode"))

			rospy.loginfo("Loaded %i waypoints for %s tracking" % (len(wps),tracking_mode))

			if tracking_mode == "discrete":
				nom_lvel = rospy.get_param("~waypoints/nominal_velocity")
				nom_rvel = rospy.get_param("~waypoints/nominal_yawrate")

				dispatch_discrete(wps,nom_lvel,nom_rvel)
			elif tracking_mode == "continuous":
				duration = rospy.get_param("~waypoints/duration")

				dispatch_continuous(wps,duration)
			else:
				rospy.logerr("Unknown tracking mode (%s)" % tracking_mode)
				rospy.signal_shutdown("Error: bad mode")

			rospy.signal_shutdown("Waypoint plan complete!")
		else:
			if (len(wps) < 2):
				rospy.logerr("Not enough waypoints were been loaded (%i)" % len(wps))
				rospy.signal_shutdown("Error: no waypoints")
			else:
				rospy.logerr("Unable to locate waypoint parameters")
				rospy.signal_shutdown("Error: no parameters")

def waypoint_pub():
	global timer
	global client_base
	rospy.init_node('load_waypoints', anonymous=True)

	action_topic = rospy.get_param("~action_topic", 'contrail')
	client_base = actionlib.SimpleActionClient(action_topic, TrajectoryAction)
	client_base.wait_for_server()

	rospy.loginfo("Loading waypionts from parameters...")
	timer = rospy.Timer(rospy.Duration(1.0/50.0), timer_callback)

	rospy.spin()

if __name__ == '__main__':
	try:
		waypoint_pub()
	except rospy.ROSInterruptException:
		pass
