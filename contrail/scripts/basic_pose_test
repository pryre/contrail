#!/usr/bin/env python2

import sys
from math import *

import rospy
from geometry_msgs.msg import PoseStamped

global pub_pos
global timer

def timer_callback(e):
	global pub_pos
	global timer

	if e.current_real > rospy.Time(0):
		pos_x = float(sys.argv[1])
		pos_y = float(sys.argv[2])
		pos_z = float(sys.argv[3])

		rospy.loginfo("Commanding to location [%0.2f;%0.2f;%0.2f]" % (pos_x,pos_y,pos_z))

		msg_out = PoseStamped()
		msg_out.header.frame_id = "map"
		msg_out.header.stamp = e.current_real

		msg_out.pose.position.x = pos_x
		msg_out.pose.position.y = pos_y
		msg_out.pose.position.z = pos_z
		msg_out.pose.orientation.w = 1.0
		msg_out.pose.orientation.x = 0.0
		msg_out.pose.orientation.y = 0.0
		msg_out.pose.orientation.z = 0.0

		pub_pos.publish(msg_out)
		timer.shutdown()

def waypoint_pub():
	global timer
	global pub_pos
	rospy.init_node('talker', anonymous=True)
	pub_pos = rospy.Publisher('/mantis_uav/mavel/reference/contrail/pose', PoseStamped, queue_size=10, latch=True)

	rospy.loginfo("Sending basic pose reference")
	timer = rospy.Timer(rospy.Duration(1.0/50.0), timer_callback)

	rospy.spin()

if __name__ == '__main__':
	try:
		waypoint_pub()
	except rospy.ROSInterruptException:
		pass
